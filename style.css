body {
    background-color: black;
    color: white;
    font-size: 32px;
}
#nearby {
    /* Children with float: left do not animate smoothly when their
       changing size allows their row to change. So lock them into
       columns. */
    display: grid;
    grid-template-columns: 200px 200px 200px 200px;
    width: 800px;
    margin: auto
}

.avatar {
    position: relative; /* so that it becomes the containing box */
    height: 200px;
    width: 200px;
    opacity: 1;
    left: 0;
    transition: height 1s, width 1s, left 1s, opacity 1s;    
}
.selected {
    height: 400px;
    width: 400px;
    opacity: 1;    
}
/* There's no "all siblings" selector in css yet, so add .hasSelected
   to parent when we add .selected to one child. This then catches all
   the other children. */
.hasSelected > :not(.selected) {
    height: 0;
    width: 0;
    opacity: 0;
}

.avatar .pictureBox {
    pointer-events: none;
}
.pictureBox img {
    border-radius: 50%;
    background-color: white;
    width: 100%;
    height: 100%;
}
.pictureBox span {
    line-height: 0.70;
    position: absolute;
    left: 0;
    bottom: 0;
    margin: 0;
    color: rgb(82, 202, 239);
}
.pictureBox i {
    position: absolute;
    left: 0;
    top: 0;
    margin: 0;
}
.avatar i:after { content: "check_box" }
.avatar i { color: rgba(29, 252, 127, 1); }

.avatar:not(.selected) .dataDisplay { display: none }
.dataDisplay .cloud {
    width: 500px;
    height: 500px;
    /* WordCloud specifically sets the element position to relative. Cannot override here. */
    left: 75px;
    top: -150px;
    z-index: 10;
}

#nearby:not(.hasSelected) ~ .ratingOptions {
    display: none;
}
.ratingOptions {
    margin-top: 400px;
}
.autocomplete { color: black; }

/* The next two are nice on desktop, but pointless on touch devices */
.cloud > span {
    transition: text-shadow 1s ease, opacity 1s ease;
    -webkit-transition: text-shadow 1s ease, opacity 1s ease;
    -ms-transition: text-shadow 1s ease, opacity 1s ease;
  }
.cloud > span:hover {
    text-shadow: 0 0 10px, 0 0 10px #fff, 0 0 10px #fff, 0 0 10px #fff;
    opacity: 0.5;
  }
