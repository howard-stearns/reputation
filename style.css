body {
    background-color: black;
    color: white;
}
#nearby {
    /* Children with float: left do not animate smoothly when their
       changing size allows their row to change. So lock them into
       columns. */
    display: grid;
    grid-template-columns: 100px 100px 100px;
    margin: auto;
}
.avatar {
    position: relative; /* so that it becomes the containing box */
    height: 100px;
    width: 100px;
    opacity: 1;
    left: 0;
    transition: height 1s, width 1s, left 1s, opacity 1s;    
}
.selected:not(.pseudoButton) {
    height: 200px;
    width: 200px;
    opacity: 1;    
}
.metadata {
    width: 100px;
    position: absolute;
    right: 0;
    top: 0;
}
.cloud {
    width: 100%;
    height: 300px;
    /* WordCloud specifically sets the element position to relative. Cannot override here. */
}    
img[src="qrbutton.jpg"] { width: 30px; }
#selfieButtons {
    bottom: 32px;
    position: relative;
    left: 0
}
#selfie {
    position: relative;
    margin: auto;
    width: 200px;
}
#selfieVideo, #selfieImg {
    height: 200px;
    width: 200px;
    border-radius: 50%;
    display: block;
    object-fit: cover;
}
#setup {
    margin: 10px;
    padding: 10px;
}

/* There's no "all siblings" selector in css yet, so add .hasSelected
   to parent when we add .selected to one child. This then catches all
   the other children. */
.hasSelected > :not(.selected) {
    height: 0;
    width: 0;
    opacity: 0;
}

#setup {
    background-color: white;
    color: black;
}
#setup i.material-icons { background-color: white; }
#setup img { max-width: 100%; }
#picker { position: relative; }

.avatar img {
    border-radius: 50%;
    background-color: white;
    width: 100%;
    height: 100%;
    object-fit: cover;
}
.shareButton,
.settingsButton {
    color: rgb(82, 202, 239);
    background-color: black;
    border: none;
}
#showQR {
    border: none;
    padding: 0;
}
.avatar > span {
    z-index: 10;
    line-height: 1.00;
    position: absolute;
    left: 0;
    bottom: 0;
    margin: 0;
    color: rgb(82, 202, 239);
    text-shadow: 0 0 10px black, 0 0 5px black;
}
.avatar > i {
    position: absolute;
    left: 0;
    top: 0;
    margin: 0;
    color: rgba(29, 252, 127, 1);
}
#photoDate:before { content: "photo updated "}
.avatar i:after { content: "check_box" }
#takeSelfie i:after { content: "photo_camera" }
#acceptSelfie i:after { content: "check_circle_outline" }
#retakeSelfie i:after { content: "autorenew" }
.settingsButton i:after { content: "settings_applications" }
.shareButton i:after { content: "share" }
.next i:after { content: "arrow_forward" }
.back i:after { content: "arrow_back" }
#takeSelfie { color: blue; }
#retakeSelfie { color: red; }
#acceptSelfie { color: green; }
.pseudoButton button {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%);
}

#showQR.showing > img,
#showQR:not(.showing) > div,
#selfie.lineup #selfieImg,
#selfie:not(.lineup) #selfieVideo,
.avatar:not(.selected) .info,
#nearby:not(.hasSelected) ~ .ratingOptions,
#nearby:not(.hasSelected) ~ .metadata,
#qr:not(.none) ~ .cloud,
#qr:not(.none) ~ .input,
.none,
#setup:not(.none) ~ #picker,
#setup:not(.intro) #intro,
#setup:not(.info) #info,
#setup:not(.infoSettings) #infoSettings,
#setup:not(.contact) #contact,
#setup:not(.selfie) #selfie,
#setup:not(.threeWords) #threeWords,
#selfieCanvas
{ display: none; }


.autocomplete { color: black; }

/* The next two are nice on desktop, but pointless on touch devices */
.cloud > span {
    transition: text-shadow 1s ease, opacity 1s ease;
    -webkit-transition: text-shadow 1s ease, opacity 1s ease;
    -ms-transition: text-shadow 1s ease, opacity 1s ease;
  }
.cloud > span:hover {
    text-shadow: 0 0 10px, 0 0 10px #fff, 0 0 10px #fff, 0 0 10px #fff;
    opacity: 0.5;
  }
